/*
 * Sheet.java
 *
 * Created on 7 de marzo de 2006, 03:45 PM
 */

package electric_sheet;

import tda.*; 
/**
 * Representa a la interfaz de grafica de usuario, de tabla de datos y su respectivo editor de funciones.
 * @author  Erik Giron
 */
public class Sheet extends javax.swing.JPanel {
    private Hoja hoja = new Hoja();
    private int editedRow=0;
    private int editedCol=0;
    private boolean nuevoDato = true;
    /**
     * Creates new form Sheet
     */
    public Sheet() {
        initComponents();
        
    }
    public Sheet(String idHoja) {
        initComponents();
        hoja.setId(idHoja);
        this.setName(idHoja); // asigna nombre para identificar la hoja
    }
    public Sheet(String idHoja,Workplace wp) {
        initComponents();
        hoja.setId(idHoja);
        hoja.setWorkplace(wp);
        this.setName(idHoja); // asigna nombre para identificar la hoja
    }  
    /**Retorna Id del */
    public String getId(){
        return hoja.getId();
    }
    /**Asigna nombre*/
    public void setId(String sId){
        hoja.setId(sId);
    }
    /**Retorna hoja de datos contenida en la tabla*/
    public Hoja getHoja(){
        return this.hoja;
    }
    /**Asigna texto de celda seleccionada al editor de funciones*/
    protected void setCellEditorText(){
        //obtener coord de celda seleccionada
        int row = jTable1.getSelectedRow();
        int col = jTable1.getSelectedColumn();
        
        Dato tmpDato;
        
        if (row> 0 && col >0){
            //Copiar valor de expr al texto del editor de expresiones.
            hoja.getTabla().irA(col,row);
            tmpDato = hoja.getTabla().datoActual();
            if (tmpDato!=null){
                jTextFieldEditor.setText(tmpDato.getExpr());
                editedRow = row;
                editedCol = col;
                nuevoDato = false;
            }
            else{
                jTextFieldEditor.setText("");
                editedRow = row;
                editedCol = col;
                nuevoDato = true;
            }
            //almacenar valor actual de la celda editada en las variables globales
        }else{
            editedRow = -1;
            editedCol = -1;
        }
    }
    /**Asigna texto de editor de funciones a celda seleccionada*/
    protected void setDataFromCellEditor(){
                Dato tmpDato;
        String tmpExpr;
        
        // si el rango es correcto
        if(editedRow > 0 && editedCol > 0){ 
            tmpExpr = jTextFieldEditor.getText(); //obtener el texto actual del cuadro de texto
            if(tmpExpr.length() > 0){ //Si no es una cadena vacia
                if (nuevoDato){//Si es nuevo dato crear nuevo nodo
                    tmpDato = new Dato(new String(tmpExpr));
                    hoja.getTabla().insertar(tmpDato,editedCol,editedRow);
                }
                else{ //sino solo establece expresion del dato
                    hoja.getTabla().irA(editedCol,editedRow);
                    tmpDato = hoja.getTabla().datoActual();
                    if (tmpDato!=null){
                        tmpDato.setExpr(new String(tmpExpr));
                    }
                }
            }
            else{
                hoja.getTabla().borrar(editedCol,editedRow);
            }
                
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldEditor = new javax.swing.JTextField();
        jButtonApply = new javax.swing.JButton();
        jButtonReject = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jTable1.setModel(hoja);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setCellSelectionEnabled(true);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jToolBar1.setFloatable(false);
        jToolBar1.setToolTipText("Asignar expresion o funcion a la celda actual");
        jLabel1.setFont(new java.awt.Font("Dialog", 3, 12));
        jLabel1.setText("f(x): ");
        jToolBar1.add(jLabel1);

        jTextFieldEditor.setToolTipText("Ingrese aqui la formula para la celda actual");
        jTextFieldEditor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldEditorKeyReleased(evt);
            }
        });

        jToolBar1.add(jTextFieldEditor);

        jButtonApply.setMnemonic('P');
        jButtonApply.setText("Aplicar");
        jButtonApply.setToolTipText("Aplicar cambios a la celda");
        jButtonApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApplyActionPerformed(evt);
            }
        });
        jButtonApply.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButtonApplyKeyReleased(evt);
            }
        });
        jButtonApply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonApplyMouseReleased(evt);
            }
        });

        jToolBar1.add(jButtonApply);

        jButtonReject.setMnemonic('R');
        jButtonReject.setText("Rechazar");
        jButtonReject.setToolTipText("Rechazar cambios hechos a la celda");
        jToolBar1.add(jButtonReject);

        add(jToolBar1, java.awt.BorderLayout.NORTH);

    }// </editor-fold>//GEN-END:initComponents

    private void jButtonApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApplyActionPerformed
        
    }//GEN-LAST:event_jButtonApplyActionPerformed

    private void jTextFieldEditorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEditorKeyReleased
        if (evt.getKeyCode() == evt.VK_ENTER){
            setDataFromCellEditor();
            jTable1.repaint();
        }
        else if(evt.getKeyCode() == evt.VK_ESCAPE){
            setCellEditorText();
            jTextFieldEditor.repaint();
       }
    }//GEN-LAST:event_jTextFieldEditorKeyReleased

    private void jButtonApplyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonApplyKeyReleased
    }//GEN-LAST:event_jButtonApplyKeyReleased

    private void jButtonApplyMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonApplyMouseReleased
        setDataFromCellEditor();
        jTable1.repaint();
    }//GEN-LAST:event_jButtonApplyMouseReleased

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        int keyCode = evt.getKeyCode();
        if( keyCode == evt.VK_UP 
                || keyCode == evt.VK_DOWN 
                || keyCode == evt.VK_LEFT 
                || keyCode == evt.VK_RIGHT 
                || keyCode == evt.VK_ENTER
                || keyCode == evt.VK_ESCAPE || keyCode == evt.VK_TAB)            
            setCellEditorText();
        else if (keyCode == evt.VK_DELETE || keyCode == evt.VK_BACK_SPACE){
            setDataFromCellEditor();
        }
            
    }//GEN-LAST:event_jTable1KeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getButton() == evt.BUTTON1){
            setCellEditorText();
        }
    }//GEN-LAST:event_jTable1MouseClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonApply;
    private javax.swing.JButton jButtonReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldEditor;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
    
}
